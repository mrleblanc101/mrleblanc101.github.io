import{v as D,C as y,aw as x,ax as _,E as w,H as b,y as C}from"./app.config.5ed4c0f1.js";import{c as v}from"./entry.8b1f5943.js";const O=()=>null;function H(...s){var m;const l=typeof s[s.length-1]=="string"?s.pop():void 0;typeof s[0]!="string"&&s.unshift(l);let[t,f,a={}]=s;if(typeof t!="string")throw new TypeError("[nuxt] [asyncData] key must be a string.");if(typeof f!="function")throw new TypeError("[nuxt] [asyncData] handler must be a function.");a.server=a.server??!0,a.default=a.default??O,a.lazy=a.lazy??!1,a.immediate=a.immediate??!0;const e=D(),u=()=>e.isHydrating?e.payload.data[t]:e.static.data[t],d=()=>u()!==void 0;e._asyncData[t]||(e._asyncData[t]={data:y(u()??((m=a.default)==null?void 0:m.call(a))??null),pending:y(!d()),error:y(e.payload._errors[t]?v(e.payload._errors[t]):null)});const n={...e._asyncData[t]};n.refresh=n.execute=(o={})=>{if(e._asyncDataPromises[t]){if(o.dedupe===!1)return e._asyncDataPromises[t];e._asyncDataPromises[t].cancelled=!0}if(o._initial&&d())return u();n.pending.value=!0;const i=new Promise((r,c)=>{try{r(f(e))}catch(P){c(P)}}).then(r=>{if(i.cancelled)return e._asyncDataPromises[t];a.transform&&(r=a.transform(r)),a.pick&&(r=k(r,a.pick)),n.data.value=r,n.error.value=null}).catch(r=>{var c;if(i.cancelled)return e._asyncDataPromises[t];n.error.value=r,n.data.value=b(((c=a.default)==null?void 0:c.call(a))??null)}).finally(()=>{i.cancelled||(n.pending.value=!1,e.payload.data[t]=n.data.value,n.error.value&&(e.payload._errors[t]=v(n.error.value)),delete e._asyncDataPromises[t])});return e._asyncDataPromises[t]=i,e._asyncDataPromises[t]};const p=()=>n.refresh({_initial:!0}),g=a.server!==!1&&e.payload.serverRendered;{const o=C();if(o&&!o._nuxtOnBeforeMountCbs){o._nuxtOnBeforeMountCbs=[];const r=o._nuxtOnBeforeMountCbs;o&&(x(()=>{r.forEach(c=>{c()}),r.splice(0,r.length)}),_(()=>r.splice(0,r.length)))}g&&e.isHydrating&&d()?n.pending.value=!1:o&&(e.payload.serverRendered&&e.isHydrating||a.lazy)&&a.immediate?o._nuxtOnBeforeMountCbs.push(p):a.immediate&&p(),a.watch&&w(a.watch,()=>n.refresh());const i=e.hook("app:data:refresh",r=>{if(!r||r.includes(t))return n.refresh()});o&&_(i)}const h=Promise.resolve(e._asyncDataPromises[t]).then(()=>n);return Object.assign(h,n),h}async function M(s){const l=s?Array.isArray(s)?s:[s]:void 0;await D().hooks.callHookParallel("app:data:refresh",l)}function k(s,l){const t={};for(const f of l)t[f]=s[f];return t}export{M as r,H as u};
